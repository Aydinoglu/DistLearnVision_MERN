{"ast":null,"code":"import cookie from \"js-cookie\";\n\nconst setCookie = (key, value) => {\n  if (window !== \"undefiend\") {\n    cookie.set(key, value, {\n      // 1 Day\n      expires: 1\n    });\n  }\n};\n\nconst removeCookie = key => {\n  if (window !== \"undefined\") {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n};\n\nconst getCookie = key => {\n  if (window !== \"undefined\") {\n    return cookie.get(key);\n  }\n};\n\nconst setLocalStorage = (key, value) => {\n  if (window !== \"undefined\") {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\n\nconst removeLocalStorage = key => {\n  if (window !== \"undefined\") {\n    localStorage.removeItem(key);\n  }\n};\n\nconst authenticate = response => {\n  console.log(\"AUTHENTICATE HELPER ON SIGNIN RESPONSE\", response);\n  setCookie(\"token\", response.access_token);\n};\n\nconst isAuth = () => {\n  if (window !== \"undefined\") {\n    const cookieChecked = getCookie(\"token\");\n\n    if (cookieChecked) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n};\n\nconst signout = next => {\n  removeCookie(\"token\");\n  removeLocalStorage(\"user\");\n  next();\n};\n\nconst updateUser = (response, next) => {\n  console.log(\"UPDATE USER IN LOCALSTORAGE HELPERS\", response);\n\n  if (typeof window !== \"undefined\") {\n    let auth = JSON.parse(localStorage.getItem(\"user\"));\n    auth = response.data;\n    localStorage.setItem(\"user\", JSON.stringify(auth));\n  }\n\n  next();\n};\n\nexport { authenticate, signout, updateUser, isAuth, setLocalStorage, getCookie };","map":{"version":3,"sources":["C:/Users/clown/Desktop/Projects/DistLearnTry/DistLearn/src/helpers/auth.js"],"names":["cookie","setCookie","key","value","window","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","console","log","access_token","isAuth","cookieChecked","signout","next","updateUser","auth","parse","getItem","data"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;;AAEA,MAAMC,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC9B,MAAIC,MAAM,KAAK,WAAf,EAA4B;AAC1BJ,IAAAA,MAAM,CAACK,GAAP,CAAWH,GAAX,EAAgBC,KAAhB,EAAuB;AACrB;AACAG,MAAAA,OAAO,EAAE;AAFY,KAAvB;AAID;AACF,CAPH;;AAQE,MAAMC,YAAY,GAAIL,GAAD,IAAS;AAC5B,MAAIE,MAAM,KAAK,WAAf,EAA4B;AAC1BJ,IAAAA,MAAM,CAACQ,MAAP,CAAcN,GAAd,EAAmB;AACjBI,MAAAA,OAAO,EAAE;AADQ,KAAnB;AAGD;AACF,CAND;;AAQA,MAAMG,SAAS,GAAIP,GAAD,IAAS;AACzB,MAAIE,MAAM,KAAK,WAAf,EAA4B;AAC1B,WAAOJ,MAAM,CAACU,GAAP,CAAWR,GAAX,CAAP;AACD;AACF,CAJD;;AAMA,MAAMS,eAAe,GAAG,CAACT,GAAD,EAAMC,KAAN,KAAgB;AACtC,MAAIC,MAAM,KAAK,WAAf,EAA4B;AAC1BQ,IAAAA,YAAY,CAACC,OAAb,CAAqBX,GAArB,EAA0BY,IAAI,CAACC,SAAL,CAAeZ,KAAf,CAA1B;AACD;AACF,CAJD;;AAKA,MAAMa,kBAAkB,GAAId,GAAD,IAAS;AAClC,MAAIE,MAAM,KAAK,WAAf,EAA4B;AAC1BQ,IAAAA,YAAY,CAACK,UAAb,CAAwBf,GAAxB;AACD;AACF,CAJD;;AAKA,MAAMgB,YAAY,GAAIC,QAAD,IAAc;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ,EAAsDF,QAAtD;AACAlB,EAAAA,SAAS,CAAC,OAAD,EAAUkB,QAAQ,CAACG,YAAnB,CAAT;AACD,CAHD;;AAIA,MAAMC,MAAM,GAAG,MAAM;AACnB,MAAInB,MAAM,KAAK,WAAf,EAA4B;AAC1B,UAAMoB,aAAa,GAAGf,SAAS,CAAC,OAAD,CAA/B;;AACA,QAAIe,aAAJ,EAAmB;AACjB,aAAO,IAAP;AACD,KAFD,MAEK;AACH,aAAO,KAAP;AACD;AACF;AACF,CATD;;AAWA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AACxBnB,EAAAA,YAAY,CAAC,OAAD,CAAZ;AACAS,EAAAA,kBAAkB,CAAC,MAAD,CAAlB;AACAU,EAAAA,IAAI;AACL,CAJD;;AAKA,MAAMC,UAAU,GAAG,CAACR,QAAD,EAAWO,IAAX,KAAoB;AACrCN,EAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ,EAAmDF,QAAnD;;AACA,MAAI,OAAOf,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAIwB,IAAI,GAAGd,IAAI,CAACe,KAAL,CAAWjB,YAAY,CAACkB,OAAb,CAAqB,MAArB,CAAX,CAAX;AACAF,IAAAA,IAAI,GAAGT,QAAQ,CAACY,IAAhB;AACAnB,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAea,IAAf,CAA7B;AACD;;AACDF,EAAAA,IAAI;AACL,CARD;;AAUF,SACIR,YADJ,EAEIO,OAFJ,EAGIE,UAHJ,EAIIJ,MAJJ,EAKIZ,eALJ,EAMIF,SANJ","sourcesContent":["import cookie from \"js-cookie\";\r\n\r\nconst setCookie = (key, value) => {\r\n    if (window !== \"undefiend\") {\r\n      cookie.set(key, value, {\r\n        // 1 Day\r\n        expires: 1,\r\n      });\r\n    }\r\n  };\r\n  const removeCookie = (key) => {\r\n    if (window !== \"undefined\") {\r\n      cookie.remove(key, {\r\n        expires: 1,\r\n      });\r\n    }\r\n  };\r\n  \r\n  const getCookie = (key) => {\r\n    if (window !== \"undefined\") {\r\n      return cookie.get(key);\r\n    }\r\n  };\r\n  \r\n  const setLocalStorage = (key, value) => {\r\n    if (window !== \"undefined\") {\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n    }\r\n  };\r\n  const removeLocalStorage = (key) => {\r\n    if (window !== \"undefined\") {\r\n      localStorage.removeItem(key);\r\n    }\r\n  };\r\n  const authenticate = (response) => {\r\n    console.log(\"AUTHENTICATE HELPER ON SIGNIN RESPONSE\", response);\r\n    setCookie(\"token\", response.access_token);\r\n  };\r\n  const isAuth = () => {\r\n    if (window !== \"undefined\") {\r\n      const cookieChecked = getCookie(\"token\");\r\n      if (cookieChecked) {\r\n        return true;\r\n      }else{\r\n        return false;\r\n      }\r\n    }\r\n  };\r\n  \r\n  const signout = (next) => {\r\n    removeCookie(\"token\");\r\n    removeLocalStorage(\"user\");\r\n    next();\r\n  };\r\n  const updateUser = (response, next) => {\r\n    console.log(\"UPDATE USER IN LOCALSTORAGE HELPERS\", response);\r\n    if (typeof window !== \"undefined\") {\r\n      let auth = JSON.parse(localStorage.getItem(\"user\"));\r\n      auth = response.data;\r\n      localStorage.setItem(\"user\", JSON.stringify(auth));\r\n    }\r\n    next();\r\n  };\r\n  \r\nexport {\r\n    authenticate,\r\n    signout,\r\n    updateUser,\r\n    isAuth,\r\n    setLocalStorage,\r\n    getCookie\r\n  };\r\n  "]},"metadata":{},"sourceType":"module"}